# variable 
# ভেরিয়েবল হলো ডেটা সংরক্ষণের জন্য নামকরণ করা স্থান। পাইথনে ভেরিয়েবল ডিক্লেয়ার করার জন্য কোনো বিশেষ কিওয়ার্ডের প্রয়োজন নেই; সরাসরি ভেরিয়েবলে মান অ্যাসাইন করলেই এটি তৈরি হয়।

name = "Aline"
age = 25
temperature= 40.9


# এই উদাহরণে, name, age, এবং temperature হলো ভেরিয়েবল, যা বিভিন্ন ডেটা সংরক্ষণ করছে।

# Data Types 
# int age= 25
# folat 90.9
#string = "tuhsar"
#bool = true or false
#list=[1,2,3,4,5]
# tuple (20.0,.20.0)
#dict = {"name": "imran", "age": 24}
# type() chek


# input 
# ইউজারের কাছ থেকে ডেটা সংগ্রহ করার জন্য পাইথনে input() ফাংশন ব্যবহার করা হয়। এটি সাধারণত টেক্সট আকারে ইনপুট নেয় এবং ডেটা টাইপ হিসেবে string রিটার্ন করে। প্রয়োজনে এই ইনপুটকে int, float ইত্যাদি টাইপে কনভার্ট করা যায়।

name = input("Enter yoor name: ")
print("hello, " + name)

age = int(input("Enter your age: "))
print('Your age is', age)

# output: পাইথনে আউটপুট প্রদর্শন করতে print() ফাংশন ব্যবহার করা হয়। এটি বিভিন্ন ধরনের ডেটা আউটপুটে প্রদর্শন করতে পারে।

name = "Alice"
age = 25
print("Name:", name)
print("Age:", age)

# ফরম্যাটিং সহ আউটপুট: পাইথনে আউটপুটকে আরো সুন্দরভাবে প্রদর্শনের জন্য f-string বা format() মেথড ব্যবহার করা যায়।

# f-string 
name = "Tushar"
age = 24
print(f"Hello, {name}. You are {age} years old.")
# format() method 
print("Hello, {}. You are  {} years old.".format(name, age))

# সংক্ষেপে:
# ইনপুট নেওয়ার জন্য: input() ফাংশন ব্যবহার করা হয়।
# আউটপুট প্রদর্শনের জন্য: print() ফাংশন ব্যবহার করা হয়।

# Operators 
# . গাণিতিক অপারেটর (Arithmetic Operators): পাইথনে গাণিতিক কাজ করার জন্য বিভিন্ন অপারেটর রয়েছে।

# + : যোগ
# - : বিয়োগ
# * : গুণ
# / : ভাগ (ভাসা ভ্যালু রিটার্ন করে)
# // : ভাগফল (পূর্ণসংখ্যা রিটার্ন করে)
# % : ভাগশেষ (মডুলাস)
# ** : ঘাত (এক্সপোনেনশিয়াল)

x = 10
y = 3
print(x + y)   # 13
print(x - y)   # 7
print(x * y)   # 30
print(x / y)   # 3.3333333333333335
print(x // y)  # 3
print(x % y)   # 1
print(x ** y)  # 1000


# ২. তুলনামূলক অপারেটর (Comparison Operators): তুলনামূলক অপারেটর ব্যবহার করে ভেরিয়েবল বা মানগুলোর মধ্যে তুলনা করা হয়, যা বুলিয়ান রেজাল্ট (True বা False) রিটার্ন করে।

# == : সমান কিনা যাচাই করে
# != : সমান নয় কিনা যাচাই করে
# < : ছোট কিনা
# > : বড় কিনা
# <= : ছোট বা সমান কিনা
# >= : বড় বা সমান কিনা
# উদাহরণ:

a = 5
b = 10
print(a == b)  # False
print(a != b)  # True
print(a < b)   # True
print(a > b)   # False
print(a <= b)  # True
print(a >= b)  # False

# ৩. লজিক্যাল অপারেটর (Logical Operators): লজিক্যাল অপারেটর ব্যবহার করে একাধিক শর্তের ভিত্তিতে একটি লজিক্যাল আউটপুট দেওয়া হয়।

# and : সব শর্ত True হলে True রিটার্ন করে
# or : যেকোনো একটি শর্ত True হলে True রিটার্ন করে
# not : শর্তের বিপরীত মান প্রদান করে

a = True
b = False
print(a and b)  # False
print(a or b)   # True
print(not a)    # False

# এক্সপ্রেশন (Expressions):
# এক্সপ্রেশন হলো অপারেটর এবং অপারেন্ডের সংমিশ্রণ, যা একটি নির্দিষ্ট ফলাফল রিটার্ন করে। এক্সপ্রেশনগুলো পাইথনে অনেক ধরণের হতে পারে, যেমন গাণিতিক এক্সপ্রেশন, লজিক্যাল এক্সপ্রেশন ইত্যাদি।

# উদাহরণ:

# গাণিতিক এক্সপ্রেশন
x = 10
y = 5
result = x + y * 2  # এখানে x + (y * 2) হিসেবে এক্সপ্রেশনটি মূল্যায়ন করা হবে
print(result)       # 20

# লজিক্যাল এক্সপ্রেশন
a = True
b = False
logical_result = a or b and not a
print(logical_result)  # False

# সংক্ষেপে:
# অপারেটর হলো সেই চিহ্ন বা প্রতীক যা ভেরিয়েবল বা মানের মধ্যে বিভিন্ন ধরনের কাজ সম্পন্ন করে।
# এক্সপ্রেশন হলো অপারেটর ও অপারেন্ডের সমন্বয়ে গঠিত, যা একটি নির্দিষ্ট মান বা ফলাফল প্রদান করে।

